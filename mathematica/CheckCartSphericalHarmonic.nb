(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     23074,        523]
NotebookOptionsPosition[     21895,        497]
NotebookOutlinePosition[     22296,        513]
CellTagsIndexPosition[     22253,        510]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"toSphere", "[", "vec_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "rho", ",", "result", ",", "x", ",", "y", ",", "z", ",", "thetaAns", 
        ",", "phiAns"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x", "=", 
        RowBox[{
        "vec", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{
        "vec", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"z", "=", 
        RowBox[{
        "vec", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rho", "=", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]]}], ";", "\[IndentingNewLine]", 
       RowBox[{"phiAns", "=", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"thetaAns", "=", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"z", ",", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "==", "0"}], "&&", 
          RowBox[{"y", "==", "0"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"phiAns", "=", "0"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"z", "==", "0"}], ",", 
            RowBox[{"thetaAns", "=", "0"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"{", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"], "+", 
            SuperscriptBox["z", "2"]}]], ",", "thetaAns", ",", "phiAns"}], 
         "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "result", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sphereHarm", "[", 
     RowBox[{"l_", ",", "x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"r", ",", "theta", ",", "phi", ",", "result"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", "theta", ",", "phi"}], "}"}], "=", 
        RowBox[{"ToSphericalCoordinates", "[", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"SphericalHarmonicY", "[", 
            RowBox[{"l", ",", "#", ",", "theta", ",", "phi"}], "]"}], "&"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"2", "*", "l"}], "+", "1"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "l"}], ",", "l"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"N", "[", "result", "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"diff", "[", 
    RowBox[{
    "Yfortran_", ",", "l_", ",", "m_", ",", "x_", ",", "y_", ",", "z_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "theta", ",", "phi", ",", "result"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", "theta", ",", "phi"}], "}"}], "=", 
        RowBox[{"ToSphericalCoordinates", "[", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"r", ",", "theta", ",", "phi"}], "}"}], "=", 
       RowBox[{"toSphere", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"Yfortran", "-", 
        RowBox[{"SphericalHarmonicY", "[", 
         RowBox[{"l", ",", "m", ",", "theta", ",", "phi"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", "result", "]"}], ">", "0.3"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", "\"\<Diff was Big, spherical harmonic should be\>\"", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"SphericalHarmonicY", "[", 
           RowBox[{"l", ",", "m", ",", "theta", ",", "phi"}], "]"}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", "\"\<For x,y,z=\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "x", ",", "\"\< , \>\"", ",", "y", ",", "\"\< , \>\"", ",", "z"}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", "\"\<l,m=\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"l", ",", "\"\<,\>\"", ",", "m"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Return", "[", 
         RowBox[{"N", "[", "result", "]"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"N", "[", 
        RowBox[{"result", ",", "6"}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.926682149471929*^9, 3.926682227016218*^9}, {
   3.926682324506357*^9, 3.92668233903279*^9}, {3.9266823883635283`*^9, 
   3.92668250358169*^9}, {3.9266827044510508`*^9, 3.926682710025237*^9}, {
   3.926682744959908*^9, 3.92668275632987*^9}, {3.926682812371369*^9, 
   3.926682845411833*^9}, {3.926682891764533*^9, 3.926682947101803*^9}, {
   3.92668300503555*^9, 3.926683152296672*^9}, {3.9266850311957817`*^9, 
   3.926685041954218*^9}, {3.927719453277157*^9, 3.927719453828607*^9}, {
   3.927719503719709*^9, 3.9277195282629967`*^9}, {3.927719563532695*^9, 
   3.9277195905458612`*^9}, {3.927719651331936*^9, 3.927719651914481*^9}, {
   3.9277198494481287`*^9, 3.9277199504339027`*^9}, {3.927720011411951*^9, 
   3.927720013091118*^9}, {3.9277201295499163`*^9, 3.927720233176005*^9}, {
   3.927720861682434*^9, 3.927721035510305*^9}, 3.92772107374371*^9, {
   3.9277212132417803`*^9, 3.927721511167767*^9}, {3.927721553276415*^9, 
   3.927721811202327*^9}, {3.927721949332378*^9, 3.927721989549362*^9}, {
   3.92780057952066*^9, 3.927800582160358*^9}, {3.927800993144813*^9, 
   3.9278010048367577`*^9}, {3.9278010903802834`*^9, 
   3.9278011161566477`*^9}, {3.9278011748220654`*^9, 3.927801317255604*^9}, {
   3.9278013664495783`*^9, 3.927801389133205*^9}, {3.927804576829105*^9, 
   3.927804578700347*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"0be31456-676f-43fd-8464-4c894daa8e3d"],

Cell["\<\
Diff should return a very small number (ideally zero) if there aren\
\[CloseCurlyQuote]t any issues.\
\>", "Text",
 CellChangeTimes->{{3.927804503910844*^9, 
  3.927804535245989*^9}},ExpressionUUID->"fca2e5d5-859a-4649-9974-\
b7b61534f5e6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"diff", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", ".0000000"}], "+", 
    RowBox[{".2324481", "I"}]}], ",", 
   RowBox[{"+", "2"}], ",", 
   RowBox[{"-", "2"}], ",", 
   RowBox[{"-", "438.3579901"}], ",", 
   RowBox[{"+", "438.3579901"}], ",", 
   RowBox[{"-", "504.3079901"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"diff", "[", 
  RowBox[{
   RowBox[{"0.0000001", "+", 
    RowBox[{".2324481", "I"}]}], ",", 
   RowBox[{"+", "2"}], ",", 
   RowBox[{"-", "2"}], ",", 
   RowBox[{"+", "438.3579901"}], ",", 
   RowBox[{"-", "438.3579901"}], ",", 
   RowBox[{"-", "504.3079901"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"diff", "[", 
  RowBox[{
   RowBox[{"0.0000001", "+", 
    RowBox[{".2838437", "I"}]}], ",", 
   RowBox[{"+", "2"}], ",", 
   RowBox[{"-", "2"}], ",", 
   RowBox[{"+", "438.3579901"}], ",", 
   RowBox[{"-", "438.3579901"}], ",", 
   RowBox[{"+", "372.4079901"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.927805869902499*^9, 3.927805869904175*^9}, {
  3.927806070095767*^9, 3.927806086281879*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"0c62bc5a-6f42-4d94-8ac5-cc615384cd44"],

Cell[BoxData[
 RowBox[{"4.270003052753763`*^-17", "-", 
  RowBox[{"3.964465541961282`*^-8", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.927805871712619*^9, {3.927806070835788*^9, 3.927806086770546*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"340093c4-cc6d-4b11-a951-ac03114c6e0d"],

Cell[BoxData[
 RowBox[{"9.999999998576665`*^-8", "-", 
  RowBox[{"3.964465541961282`*^-8", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.927805871712619*^9, {3.927806070835788*^9, 3.927806086772196*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"40baf317-8f01-4f66-a4a4-612674f31f76"],

Cell[BoxData[
 RowBox[{"9.999999998261958`*^-8", "+", 
  RowBox[{"1.5435203559732713`*^-8", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.927805871712619*^9, {3.927806070835788*^9, 3.927806086773691*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"552f5cdb-331e-4f6b-a9e9-a68ece82a7ac"]
}, Open  ]],

Cell["\<\
Maybe its possible to do automated testing with FunctionCompile, calling \
mathematica from fortran\
\>", "Text",
 CellChangeTimes->{{3.927806730804323*^9, 
  3.927806765175881*^9}},ExpressionUUID->"ec0fb3ce-5a1e-452b-9246-\
7a3f86a2e040"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionCompile", "[", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Typed", "[", 
       RowBox[{"Yfortran", ",", "\"\<ComplexReal64\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Typed", "[", 
       RowBox[{"ell", ",", "\"\<Integer8\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Typed", "[", 
       RowBox[{"ell", ",", "\"\<Integer8\>\""}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Yfortran", "+", "ell"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9278065556579037`*^9, 3.927806569210486*^9}, {
  3.9278066073013697`*^9, 
  3.927806716598559*^9}},ExpressionUUID->"482356d5-98cf-4821-9349-\
ad1ac3a16965"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ComplexReal64", ",", "\"Integer8\""}], "}"}], 
                    "\[Rule]", "ComplexReal64"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ComplexReal64", ",", "\"Integer8\""}], "}"}], 
                    "\[Rule]", "ComplexReal64"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
        "Complex"["Real64"], "Integer8"} -> "Complex"["Real64"]], "Input" -> 
    Compile`Program[{}, 
      Function[{
        Typed[$CellContext`Yfortran, "ComplexReal64"], 
        Typed[$CellContext`ell, 
         "Integer8"]}, $CellContext`Yfortran + $CellContext`ell]], 
    "ErrorFunction" -> Automatic, "InitializationName" -> 
    "Initialization_0f49d0a9_3e31_429a_a7e1_7e6c1d4cff66", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "Linux-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"Linux-x86-64" -> ByteArray[CompressedData["
1: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
Q+G5gY7LklO9yVd1zBK6zCSOwX6WasKCXzHDkhJMMoUluGLGpw/SHnSzIlLx
7f6WKN7Vzr0DmiNI0QFvSc8AayNcPJJL45JLpGTSyrRXPdJ+q+Rcr2QoChLy
KRFd9+hw8QFv0V5Y6OySkLcYFn3XALPurTD3i5lvCMeQw2wljC6nhz2/lkNi
Hcx/6D78FD8qZ3Bap1DvcYLZGLWnizNbTNnMQIZxX1HzF3HKlVEGXwSZClf4
4GG+h+gUi7RYBzJZWHyxL7uvwUBzMnxsZs5M+Hy7ao3Wd2sbbNd8eQq27pE3
YVt38RjTTuxi5NfKqqD84hfM21uXGf2Ls6Ck59o8pr37yBjxkpEsXX7r6L77
75UTacTnah0cW0PnZxq9ooJ3v1T/7SLqNKUSy19sJEsTjCeSQSzerIfiZfZJ
TifoAbICsEZm3SUjOjw8IORbvEIvC9NRCvabYjX5Oxko42MkJ2xJ7rays5Iw
yy4SQ5mxTAE/Qov6soQf/mJOXxiY7l75MUHRMUCtmFg6WDcr5TyZysoxcSsD
I+4VhtFSuYY/oXrBWPnB3dg3iPHH+pA/WCT/AxhIloO5ZuJAp5COAXF/jhwc
GQadAJzoqwhXfK/klOs9ekdGJ7h6RkslJfB2N4o7QhX9k2ZSyPN1eWy/4jhR
jpybQHRYxt7yUJeIyo8COsRHijUNFITpib+DiSv5RL0Goy4SpK5Dd/KNRBbV
oMUQxK0jvLne9qWpOyyjNMFijeZFAs+Hfj6Zmkirfkz9ljg6RyggFW+6GDCX
2HKWJhgX3ZCXtTLoLbFRkD1xQ75r9cyg8q9fuBgwl9jyGOFN+ZPnwc7bI0s+
L6ZDl+a1MqgusWXziPTHb6SeqYumc+L7xOx5tGpJi2wkQTuiU5lWjWxpnPjw
hrxN/rPZT2zN1tbdO7Iy57V3JWnEhWOvBs+sQoRNPwR+I4Lyo/8FhePvvxpM
HoeWs/jMFKs/ZmM7dovhWxX+ExaWf8CCHUGCY9eeFiNRJLA79/NY2jP8Pqjw
VEqPnN0+v728ZptlncI81DAgBM+nY//Rq5UdTjYQ7vKglJet9xBK8/VucDNg
GQwBPcHfqyK2ZbAWpOcpaILDfjp52/i2vmW54jam/KJ1R/85NHGBm4Q4MljZ
V7sJ7nruVNVU9wd8jzgQ3qBH+BmEXgsn4irF3k99cliiPhqoJBh4DPq8KwbE
wigQba0zwtugw5YP2fduyL+Fb3sgLou3wlw1MWB9d1POZZJ/DSY/mUh/MZKZ
040MRoW35KiTAufvzbzA2p5Ivrxy/ZAbOecmkqs+O/KLizPNPwS2Ukx6VxZA
CLjdEM0vlxyqfNLGdI6/HQWiOgZELwPEsRNRIEYDLOOpmh8GlRe2GWBhrMO/
XjrIxpbhcRxCERwqHsJBK+wEIos2XaTXnaNYZs5cM/YbM9f3GfAwm1M21xS0
i32WEJfP7ZV93TfD9pmflF2wDPYx+T6lfenf13XEkn9a6/3XPHPFSEBWncXj
Ki8RKgt1xkyEAx5mcXSG1z5xmBOu5GQC0Xz3Fmz/W8L+23XOnATu7u3VYIdo
cYl41r8hJwe4Roroq/SxzAeo1F6oeoBs5J1/RUzysA5dGoqJMSSN16uXPZ/e
cytDTXZ4wPfKHMtYcgYR1oLDfP+qTrEYYB1h8SCSHgrn6M5h43eUml0s77AR
A2m8fdKcfIUXbjUEZhkE67QE/2wI56owNtyhdB1CNhvoKDG7uJq9KDgXc2TN
orO2rhDs+ZceHXcKj0yRL5Rqd+rbvoOcRwsGuD7A41A2C0Vi3PqD8CievIiz
AXAP85cR03bNGMAVZlPNNiM+RrO2DhsVoJSXL+Rpd/YfRGQiDtwIOGwkFqAk
GXo9ydP3oTAFCg6HqiCYXZ3ZD2aHMHxA8/Ic4UiyZLVR+OKK18+OM6ieTouw
TX8J55WKbl+ZmRthf/fr/gj7fkEaLJkfEQmfVj1+dg5SBV4y3tv8PNeE5KTc
vvKdjEw4aBr89ZVT+pmUtOqXs8D56ZWjhs8cb2DR1X+sdD6LXH7fV2JsqoJX
spHHrYLeiwGfasgHkrqR1K9V+0aIsvMxx167VXzKPbPmLlwNK7ZHaragscK3
MmckMTLLq98d80bWyu/ZTB22kLEzM05k+Vi7Oe3m5TT2f5xg31M07wNudP+2
wzv4ZkhT2D3HmUHMI4UfOWYdVsaO5tWxvb46doUYjZ7XwXJIBZCuh3QJiF4e
wEPvAYhfOQCQgOg1Ik6ZuyLIjl4amA9bnDJyDF5mH4X9NPCARuRQX8/4Ch7Q
uHwN7IvAAxqXbwDRvT5O4/O+HvMtTuPyPdD3VMj/Fj7CuFwDwEkQlcdpXP+T
mN4nD+kz847F+LG/k98G0ZzFaVzOJJqJM07j8jTIJ4IH9Cf9h/LNi/tDRPsp
4AGNy5nfUxDr5ijWjQzOpe1OV2Wztc7uqm+qd9dbG+q3WN31zU3G5ib7cmt9
U0NDW2Ouw2przXWoVe4NruZNsZNraXut3cloGlx2q9vOnGMb7O01VVU1pWvs
re6ldndNTFbW0Gx1l//Meg3lUBXWUdbCmnx7fl6NSllorbEusufVLLKra/Pq
VLUOh1rNTF9jKG9qa66NDIrwa11Wp9PuqjFYGxoiAiaABzor7Jtq4kfqUper
2dVqd//k6Wr35gZ73LnyJrf9absLDqvd8JOGydpUB0cyCSld8URlZZ4ql8pV
k4scSmuBrY7S1Do0eVS+tcBeWFBnpdT2/AJVvsbq0MBgCvNsGnhgr4HndWft
ow3MAX7t8p9O9//s2T53U0Nu5T8EHMP6/wHfWPe4
        "]]|>, "orcInstance" -> 52349312, "orcModuleId" -> 52348928, 
    "targetMachineId" -> 52194896|>, 140407181705600, 140407181705296, 
   140407181705376, 140407181705216, 
   "{\"Complex\"[\"Real64\"], \"Integer8\"} -> \"Complex\"[\"Real64\"]"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.927806561532852*^9, 3.927806571394569*^9}, {
  3.927806612801108*^9, 3.927806624345454*^9}, {3.9278066849206448`*^9, 
  3.927806706373062*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"3d130da6-f4f6-4b35-841c-0da1bcc3cd87"]
}, Open  ]]
},
WindowSize->{958.5, 1061.25},
WindowMargins->{{Automatic, -1920}, {Automatic, 0}},
FrontEndVersion->"13.2 for Linux x86 (64-bit) (December 7, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"de838497-cf28-4e4b-b665-18a4a72afbe4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 7484, 183, 841, "Input",ExpressionUUID->"0be31456-676f-43fd-8464-4c894daa8e3d"],
Cell[8045, 205, 250, 6, 37, "Text",ExpressionUUID->"fca2e5d5-859a-4649-9974-b7b61534f5e6"],
Cell[CellGroupData[{
Cell[8320, 215, 1129, 31, 79, "Input",ExpressionUUID->"0c62bc5a-6f42-4d94-8ac5-cc615384cd44"],
Cell[9452, 248, 298, 5, 36, "Output",ExpressionUUID->"340093c4-cc6d-4b11-a951-ac03114c6e0d"],
Cell[9753, 255, 297, 5, 36, "Output",ExpressionUUID->"40baf317-8f01-4f66-a4a4-612674f31f76"],
Cell[10053, 262, 298, 5, 36, "Output",ExpressionUUID->"552f5cdb-331e-4f6b-a9e9-a68ece82a7ac"]
}, Open  ]],
Cell[10366, 270, 249, 6, 37, "Text",ExpressionUUID->"ec0fb3ce-5a1e-452b-9246-7a3f86a2e040"],
Cell[CellGroupData[{
Cell[10640, 280, 789, 19, 133, "Input",ExpressionUUID->"482356d5-98cf-4821-9349-ad1ac3a16965"],
Cell[11432, 301, 10447, 193, 62, "Output",ExpressionUUID->"3d130da6-f4f6-4b35-841c-0da1bcc3cd87"]
}, Open  ]]
}
]
*)

